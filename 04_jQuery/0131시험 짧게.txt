1. jQuery 연동 방법 => 폴더를 복잡하게 구성해서 나오지 않을까...
- <script src="경로"> ../ : 이전폴더

2. input type 속성
    type=”XXXX”

3. div태그, span태그의 차이점
- div는 블럭요소 / span은 인라인요소

    div태그와 span태그의 차이점 1 : 줄바꿈 적용
    > div태그 : 블럭요소로 한 줄 단위로 영역 차지(이미 존재하는 태그 다음줄에 영역이 잡힘)
    > span태그 : 인라인요소로 content 영역만 차지(줄바꿈이 발생되지 않고 옆으로 영역이 잡힘)

4. infinity, NaN, eval(인자) 이런것들..? 윈도우 전역객체 속성
- Infinity
양/음의 무한대를 나타내는 숫자값
어떤 수를 0으로 나누었을 때 나오는 값
- NaN *(Not a Number)
숫자가 아닌 수를 표현하는 속성으로
숫자가 아닌 타입을 강제형변환 하려는 경우 NaN 이라는 속성 반환
- eval(인자)
인자로 전달받은 문자열을 자바스크립트 코드로 변환하여 실행하는 전역함수

5. typeof() 이게 뭐냐??
화면에 출력 (텍스트로 출력되기 때문에 콘솔출력과 결과 다를 수 있음)
자료형 확인시 사용하는 함수 : typeof(변수명)

6. document 메소드들.. getElementById, getElementsClassName
** 클래스 속성이 abc를 갖는 값을 변수 abc에 할당해라
const abc = document.getElementsClassName("abc");

7. window.onload(); 이게 뭔지 특징
해당 문서 요소들을 다 로드시키는 window 전역객체
window.onload = function(){
                    실행내용;
                }
				JavaScript 에서의 window.onload 구문은
                해당의 문서 요소들이 다 로드되고(그려지고, 랜더링되고) +
                외부문서들(css파일)도 다 가지고 온 뒤에 실행됨

8. 자바스크립트를 작성하는 방법 3가지 - 내부 외부 인라인
    inline(인라인) : 태그 내에 간단 소스코드를 작성해서 실행되게 하는 방법
    [표현법] <태그 on이벤트명="해당 이 요소에 그 이벤트가 발생시 실행할 소스코드" >

    internal(내부) : html 문서 내에 소스코드를 작성해서 실행되게 하는 방법
    현재 html문서내 script 태그 영역 안에 소스코드 작성
    script태그는 head태그, body태그든 다 작성 가능

    external(외부) : 별도의 .js 파일로 소스코드를 작성해서 가져다가 실행되게 하는 방법

9. 자바스크립트에서 배열 선언하는 방법 - 2가지
let arr = [];
let arr = new Array();- 크기지정 할 수도 안할 수도

10. block scope, function scope 이게 뭐냐.. => {} 뭐가다르냐..
	var는 function scope == 변수가 선언된 함수 영역 내에서 사용 가능
	let, const는 block scope == 변수가 선언된 "블력{}" 내에서만 사용 가능 (자바와 유사)

11. undefined가 언제 뜨는지?
- 값을 할당받지 못한 상태일 때

12. 원시타입, 참조타입 차이점, 종류
* 원시타입
- 종류 : 숫자형, 문자형, 논리형, null, undefined(할당(값 셋팅)받지 못한 상태)
- 특징 : 원본이 바뀌어도 복사본은 변경되지 않음 (리터럴 그자체)

* 참조타입
- 종류 : 함수, 배열, 객체
- 특징 : 원본이 바뀌면 복사본도 똑같이 따라서 바뀜